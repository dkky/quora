c
current_user.id
logged_in?
current_user
c
params
c
status
c
current_status
status
Status
c
current_status
status
c
status.to_i
status
current_status
c
question_vote.status
question_vote
c
question_vote.status
question_vote.update(status: -1)
question_vote.status
c
C
question_vote.status
c
question_vote.status == 1
question_vote.status
question_vote
c
question_vote.status
question_vote
ques.question_votes.status
ques.question_votes
ques
c
params
c
params[:value]
params[:id]
params.value
params
pasrams[:value]
pasrams[:valur]
params[value]
params
parmas
c
params
c
params
c
params
c
params[:question]
params[:title]
params
c
params
c
params
c
@edit_answer
params
c
params[:id]
params[:answer]
params
c
params[:answer]
params[:answer][:answer]
params[:answer]
params
exit
c
params[:answer]
params[:id]
params[:answer]
params
params[:answer]
@edit_answer
c
params
@edit_answer
c
params
c
@edit_answer
params
c 
params
c
@edit_answer
params
c
@edit_answer.update(params[:answer])
current_user.answers.find(params[:id])
params
c
exit
c
@answer
@question
exit
@my_answer
c
params
c
params[:answer]
params
c
params[:answer][answer]
params[:answer][:answer]
params
c
n
@answer.save
n
params[:answer]
params[answer]
params
exit
params
c
params
:title
@question_clicked
params
c
params
exit
@user.errors.messages[:email][0]
@user.errors.messages[:email]
@user.errors.messages
@user.errors.message
@user.errors
@user
c
params
exit
@user.errors.full_messages
@user.errors.full_message
@user.errors
@user.save
c
params[:user]
